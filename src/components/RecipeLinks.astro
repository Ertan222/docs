---
import { getEntryBySlug } from 'astro:content';

export interface Props {
	slugs: string[];
}

function convertSlug(slug: string) {
	let corrected = slug;
	if (slug.startsWith('/')) {
		corrected = corrected.slice(1);
	}
	if (slug.endsWith('/')) {
		corrected = corrected.slice(0, -1);
	}
	return corrected;
}

const slugs = Astro.props.slugs.map(convertSlug);

const entries = await Promise.all(slugs.map(async (slug, i) => {
  let entry = await getEntryBySlug('docs', slug)
  if (!entry) throw Error(`Could not find entry for slug "${Astro.props.slugs[i]}"`)
  return entry
}));

const isList = entries.length > 1;
const noun = isList ? 'recipes' : 'recipe';
---

<p>
	🧑‍🍳 See related {noun}:
	{
		isList ? (
			<ul>
				{entries.map((entry) => (
					<li>
						<a href={`/${entry!.slug}/`}>{entry!.data.title}</a>
					</li>
				))}
			</ul>
		) : (
			<a href={`/${entries[0]!.slug}/`}>{entries[0]!.data.title}</a>
		)
	}
</p>
